% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot.nethist}
\alias{plot.nethist}
\title{Network histogram plot}
\usage{
\method{plot}{nethist}(
  x,
  type = "nethist",
  idx_order = 1:max(x$cluster),
  prob = FALSE,
  digits = 2,
  prob.cex = 0.1 + 0.5/log10(max(x$cluster)),
  prob.col = "black",
  y = NA,
  ...
)
}
\arguments{
\item{x}{a nethist object from \code{\link[=nethist]{nethist()}}.}

\item{type}{One of \code{nethist} or \code{prob}.}

\item{idx_order}{A numeric vector for index label order, which must be a permutation of \code{x$cluster}. If \code{NA}, it uses \code{1:max(x$clsuter)}.}

\item{prob}{A logical variable indicating block probabilities are printed on the plot. Default is FALSE.}

\item{digits}{integer indicating the number of decimal places for probability}

\item{prob.cex}{A numerical value of \code{cex} of probabilities.}

\item{prob.col}{A color vector for network histogram values/probabilities on each bin.}

\item{y}{a dummy variable for S3 methods. Never used in the plotting.}

\item{...}{other arguments to pass to \code{\link[stats:heatmap]{stats::heatmap()}}. See details.}
}
\value{
a heatmap of network histogram or \code{p_mat} ordered by \code{idx_order} from \code{nethist} object.
}
\description{
Drawing \code{\link[=heatmap]{heatmap()}} using an \code{nethist} object with an user-specified order.
}
\details{
... includes various \code{\link{graphical parameters}} passes to \code{\link[stats:heatmap]{stats::heatmap()}}, then \code{\link[graphics:image]{graphics::image()}}.
}
\examples{
\dontrun{
set.seed(2022)
#Generating Erdos-Renyi graph
A <- igraph::sample_gnp(200, 0.05)
hist_A <- nethist(A)
plot(hist_A)

#with user-specified order
idx<- unique(hist_A$cluster) 
plot(hist_A, idx_order = idx)

#User-speicifc bin color pallete (see [graphical parameters])
plot(hist_polblog,  idx_order = ind, col = colorRampPalette(colors=c("#FFFFFF","#000000"))(50))

#Users can print p_mat on the plot using user-specific colors
plot(hist_polblog,  idx_order = ind, prob= TRUE, prob.col = "blue",
      col = colorRampPalette(colors=c("#FFFFFF","#000000"))(50))
}
}
