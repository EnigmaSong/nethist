[{"path":"https://enigmasong.github.io/nethist/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 nethist authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://enigmasong.github.io/nethist/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Youngseok Song. Author, maintainer. Sofia C. Olhede. Author.","code":""},{"path":"https://enigmasong.github.io/nethist/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Song Y, Olhede S (2023). nethist: Network histogram. R package version 0.2.4, https://enigmasong.github.io/nethist/.","code":"@Manual{,   title = {nethist: Network histogram},   author = {Youngseok Song and Sofia C. Olhede},   year = {2023},   note = {R package version 0.2.4},   url = {https://enigmasong.github.io/nethist/}, }"},{"path":"https://enigmasong.github.io/nethist/index.html","id":"nethist","dir":"","previous_headings":"","what":"Network histogram ","title":"Network histogram ","text":"goal nethist estimate graphons network histogram (Wolfe Olhede 2013; Olhede Wolfe 2014). also provides extra tools summary violin plot networks (Maugis, Olhede, Wolfe 2017) visualizing network histogram. Use undirected simple graphs self-loops (either igraph matrix) inputs functions package. install package source, need C++ Fortran compilers.","code":""},{"path":"https://enigmasong.github.io/nethist/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Network histogram ","text":"can install development version nethist GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"EnigmaSong/nethist\")"},{"path":"https://enigmasong.github.io/nethist/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Network histogram ","text":"basic examples using political blog data set package:","code":""},{"path":"https://enigmasong.github.io/nethist/index.html","id":"network-histogram","dir":"","previous_headings":"Example","what":"Network histogram","title":"Network histogram ","text":"use polblog dataset package examples.  can estimate network histogram political blog data plot .","code":"library(nethist) ## Example code using polblog data set set.seed(42) hist_polblog <- nethist(polblog, h = 72) #using user-specified bin size. plot(hist_polblog)"},{"path":[]},{"path":"https://enigmasong.github.io/nethist/index.html","id":"heatmap-style","dir":"","previous_headings":"Example > Plotting option","what":"heatmap() style","title":"Network histogram ","text":"plot() provides 2D plot heatmap(). can use user-specified indices plots. example:   can display estimated block probabilities setting type = prob prob=TRUE.","code":"print(ind)  #>  [1] 17 10 13  7 12  4  8  5  1  2  6  3  9 15 11 14 16 ## Users can specify the index order of heatmap plot(hist_polblog, idx_order = ind) ## Users can specify the color palette library(RColorBrewer) plot(hist_polblog,  idx_order = ind, col = brewer.pal(9, \"Greys\")) ## Users can specify the color palette  plot(hist_polblog, idx_order = ind, type = \"prob\", prob= TRUE, prob.col = \"blue\",      col = colorRampPalette(colors=c(\"#FFFFFF\",\"#000000\"))(200))"},{"path":"https://enigmasong.github.io/nethist/index.html","id":"others","dir":"","previous_headings":"Example","what":"others","title":"Network histogram ","text":"types plots nethist package.","code":""},{"path":"https://enigmasong.github.io/nethist/index.html","id":"summary-violin-plot","dir":"","previous_headings":"Example","what":"Summary violin plot","title":"Network histogram ","text":"want check network summary violin plot data set:","code":"#User-specified subsample size. violin_netsummary(polblog, max_cycle_order = 7, subsample_sizes = 250)  #> Use R= 697 #Auto-selected subsample size. violin_netsummary(polblog, max_cycle_order = 7)  #> Use R= 697"},{"path":[]},{"path":"https://enigmasong.github.io/nethist/reference/dot-prob_mat_from_adj.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability matrix computation from network histogram cluster indices — .prob_mat_from_adj","title":"Probability matrix computation from network histogram cluster indices — .prob_mat_from_adj","text":"adjacency matrix cluster index vector, returns probability matrix","code":""},{"path":"https://enigmasong.github.io/nethist/reference/dot-prob_mat_from_adj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability matrix computation from network histogram cluster indices — .prob_mat_from_adj","text":"","code":".prob_mat_from_adj(A, idx)"},{"path":"https://enigmasong.github.io/nethist/reference/dot-prob_mat_from_adj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability matrix computation from network histogram cluster indices — .prob_mat_from_adj","text":"symmetric adjacency matrix. must binary entries (0 1). idx index vector consists integers 1 K","code":""},{"path":"https://enigmasong.github.io/nethist/reference/dot-prob_mat_from_adj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability matrix computation from network histogram cluster indices — .prob_mat_from_adj","text":"matrix whose entries 0 1.","code":""},{"path":"https://enigmasong.github.io/nethist/reference/dot-prob_mat_from_adj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability matrix computation from network histogram cluster indices — .prob_mat_from_adj","text":"","code":"set.seed(2022) #Generating Erdos-Renyi graph A <- igraph::sample_gnp(100, 0.05) hist_A <- nethist(A)   all.equal(.prob_mat_from_adj(igraph::as_adj(A, sparse= FALSE), hist_A$cluster), hist_A$p_mat) #> [1] TRUE"},{"path":"https://enigmasong.github.io/nethist/reference/nethist-package.html","id":null,"dir":"Reference","previous_headings":"","what":"nethist: Network histogram — nethist-package","title":"nethist: Network histogram — nethist-package","text":"R package network histogram estimation additional tools. install package source, need C++ Fortran (due RSpectra) compilers. suggest use undirected simple graphs (either igraph matrix) inputs functions package.","code":""},{"path":[]},{"path":"https://enigmasong.github.io/nethist/reference/nethist-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"nethist: Network histogram — nethist-package","text":"Maintainer: Youngseok Song youngseok.song@epfl.ch Authors: Sofia C. Olhede sofia.olhede@epfl.ch","code":""},{"path":"https://enigmasong.github.io/nethist/reference/nethist.html","id":null,"dir":"Reference","previous_headings":"","what":"Network histogram estimation — nethist","title":"Network histogram estimation — nethist","text":"Estimating network histogram returning indices partitions.","code":""},{"path":"https://enigmasong.github.io/nethist/reference/nethist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network histogram estimation — nethist","text":"","code":"nethist(A, h = NA, outfile, verbose = FALSE)"},{"path":"https://enigmasong.github.io/nethist/reference/nethist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network histogram estimation — nethist","text":"adjacency matrix igraph object. must undirected simple graph. h bandwidth parameter. NA, selecting bandwidth Olhede Wolfe (2014). specified, user input value used. outfile filename saving cluster indices. missing, results saved file. verbose logical value indicating whether verbose output generated.","code":""},{"path":"https://enigmasong.github.io/nethist/reference/nethist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Network histogram estimation — nethist","text":"object class nethist: cluster vector partition indices. p_mat probability matrix network histogram ordered cluster labels. rho_hat estimated sparsity parameter.","code":""},{"path":"https://enigmasong.github.io/nethist/reference/nethist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Network histogram estimation — nethist","text":"Note cluster shows partition vertices, index labels ordered variable. example, nodes cluster 1 similar nodes cluster 2 nodes cluster 10. Hence, users use user-specified order plot.nethist(). Network histogram values computed p_mat/rho_hat nethist object. nethist() runs following two steps: Initialization: spectral clustering, find initial partitions vertices. bandwidth h specified, automatic bandwidth selection used. Using greedy search algorithm, find (local) optima normalized profile log-likelihood, cluster nethist object.","code":""},{"path":"https://enigmasong.github.io/nethist/reference/nethist.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Network histogram estimation — nethist","text":"Olhede, S. C., & Wolfe, P. J. (2014). Network histograms universality blockmodel approximation. Proceedings National Academy Sciences, 111(41), 14722-14727. Wolfe, P. J., & Olhede, S. C. (2013). Nonparametric graphon estimation. arXiv preprint arXiv:1309.5936.","code":""},{"path":[]},{"path":"https://enigmasong.github.io/nethist/reference/nethist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Network histogram estimation — nethist","text":"","code":"if (FALSE) { set.seed(2022) #Generating Erdos-Renyi graph A <- igraph::sample_gnp(100, 0.05)  #With automatic bandwidth selection hist_A <- nethist(A)   #with user-specified bandwidth hist_A <- nethist(A, h = 20)   #with adjancency matrix hist_A <- nethist(igraph::as_adj(A))  }"},{"path":"https://enigmasong.github.io/nethist/reference/plot.nethist.html","id":null,"dir":"Reference","previous_headings":"","what":"Network histogram plot — plot.nethist","title":"Network histogram plot — plot.nethist","text":"Drawing heatmap() using nethist object user-specified order.","code":""},{"path":"https://enigmasong.github.io/nethist/reference/plot.nethist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network histogram plot — plot.nethist","text":"","code":"# S3 method for nethist plot(   x,   type = \"nethist\",   idx_order = 1:max(x$cluster),   prob = FALSE,   digits = 2,   prob.cex = 0.1 + 0.5/log10(max(x$cluster)),   prob.col = \"black\",   y = NA,   ... )"},{"path":"https://enigmasong.github.io/nethist/reference/plot.nethist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network histogram plot — plot.nethist","text":"x nethist object nethist(). type One nethist prob. idx_order numeric vector index label order, must permutation x$cluster. NA, uses 1:max(x$clsuter). prob logical variable indicating block probabilities printed plot. Default FALSE. digits integer indicating number decimal places probability prob.cex numerical value cex probabilities. prob.col color vector network histogram values/probabilities bin. y dummy variable S3 methods. Never used plotting. ... arguments pass stats::heatmap(). See details.","code":""},{"path":"https://enigmasong.github.io/nethist/reference/plot.nethist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Network histogram plot — plot.nethist","text":"heatmap network histogram p_mat ordered idx_order nethist object.","code":""},{"path":"https://enigmasong.github.io/nethist/reference/plot.nethist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Network histogram plot — plot.nethist","text":"... includes various graphical parameters passes stats::heatmap(), graphics::image().","code":""},{"path":"https://enigmasong.github.io/nethist/reference/plot.nethist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Network histogram plot — plot.nethist","text":"","code":"if (FALSE) { set.seed(2022) #Generating Erdos-Renyi graph A <- igraph::sample_gnp(200, 0.05) hist_A <- nethist(A) plot(hist_A)  #with user-specified order idx<- unique(hist_A$cluster)  plot(hist_A, idx_order = idx)  #User-speicifc bin color pallete (see [graphical parameters]) plot(hist_polblog,  idx_order = ind, col = colorRampPalette(colors=c(\"#FFFFFF\",\"#000000\"))(50))  #Users can print p_mat on the plot using user-specific colors plot(hist_polblog,  idx_order = ind, prob= TRUE, prob.col = \"blue\",       col = colorRampPalette(colors=c(\"#FFFFFF\",\"#000000\"))(50)) }"},{"path":"https://enigmasong.github.io/nethist/reference/polblog.html","id":null,"dir":"Reference","previous_headings":"","what":"\nPolitical blog — polblog","title":"\nPolitical blog — polblog","text":"Political blog data set Olhede Wolfe (2014), pre-processed version original data set Adamic Glance (2005). provided igraph object zero-degree removed simplified graph edgelist polblog_edgelist.","code":""},{"path":"https://enigmasong.github.io/nethist/reference/polblog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"\nPolitical blog — polblog","text":"","code":"data(polblog)"},{"path":"https://enigmasong.github.io/nethist/reference/polblog.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"\nPolitical blog — polblog","text":"polblog igraph object, pre-processed data symmetrize simplified without self-loops.","code":""},{"path":"https://enigmasong.github.io/nethist/reference/polblog.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"\nPolitical blog — polblog","text":"adjancency matrix polblog_edgelist sparse, assymetric, needs symmetrized method requires symmetric matrix. Nodes zero degree need removed. edges considered undirected edges. , get undirected version dataset polblog. First 586 blogs liberal; remaining 638 conservative.","code":""},{"path":"https://enigmasong.github.io/nethist/reference/polblog.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"\nPolitical blog — polblog","text":"http://www-personal.umich.edu/~mejn/netdata/ https://github.com/p-wolfe/network-histogram-code","code":""},{"path":"https://enigmasong.github.io/nethist/reference/polblog.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"\nPolitical blog — polblog","text":"Adamic, L. ., & Glance, N. (2005). political blogosphere 2004 US election: divided blog. Proceedings 3rd international workshop Link discovery (pp. 36-43)","code":""},{"path":"https://enigmasong.github.io/nethist/reference/polblog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"\nPolitical blog — polblog","text":"","code":"data(polblog_edgelist) data(polblog)  #From polblog_edgelist to polblog G<- igraph::graph_from_edgelist(as.matrix(polblog_edgelist), directed = FALSE) G<- igraph::delete.vertices(G, igraph::degree(G) == 0) G<- igraph::simplify(G)  polblog #> IGRAPH c8f356f U--- 1224 16715 --  #> + edges from c8f356f: #>  [1] 1--   2 1--  19 1--  21 1--  48 1--  57 1--  72 1--  97 1-- 127 1-- 156 #> [10] 1-- 193 1-- 204 1-- 205 1-- 254 1-- 287 1-- 341 1-- 377 1-- 390 1-- 446 #> [19] 1-- 451 1-- 498 1-- 499 1-- 501 1-- 518 1-- 909 1--1008 1--1178 2--  16 #> [28] 2--  22 2--  26 2--  46 2--  48 2--  84 2-- 119 2-- 126 2-- 127 2-- 131 #> [37] 2-- 141 2-- 147 2-- 166 2-- 191 2-- 198 2-- 254 2-- 261 2-- 284 2-- 304 #> [46] 2-- 306 2-- 339 2-- 352 2-- 373 2-- 377 2-- 387 2-- 428 2-- 429 2-- 440 #> [55] 2-- 442 2-- 443 2-- 444 2-- 448 2-- 487 2-- 498 2-- 499 2-- 501 2-- 507 #> [64] 2-- 514 2-- 518 2-- 522 2-- 537 2-- 584 2-- 586 2-- 909 3-- 405 3-- 562 #> [73] 3-- 563 3--1180 4-- 574 5-- 359 6--  37 6--  48 6-- 147 6-- 148 6-- 164 #> + ... omitted several edges"},{"path":"https://enigmasong.github.io/nethist/reference/polblog_edgelist.html","id":null,"dir":"Reference","previous_headings":"","what":"\nPolitical blog (edgelist) — polblog_edgelist","title":"\nPolitical blog (edgelist) — polblog_edgelist","text":"Political blog data set Olhede Wolfe (2014), part original data set Adamic Glance (2005). provided edgelist GitHub repository Prof. Patrick Wolfe.","code":""},{"path":"https://enigmasong.github.io/nethist/reference/polblog_edgelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"\nPolitical blog (edgelist) — polblog_edgelist","text":"","code":"data(\"polblog_edgelist\")"},{"path":"https://enigmasong.github.io/nethist/reference/polblog_edgelist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"\nPolitical blog (edgelist) — polblog_edgelist","text":"polblog_edgelist matrix edge list https://github.com/p-wolfe/network-histogram-code. V1 numeric vector tail vertices. V2 numeric vector head vertices.","code":""},{"path":"https://enigmasong.github.io/nethist/reference/polblog_edgelist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"\nPolitical blog (edgelist) — polblog_edgelist","text":"First 586 blogs liberal; remaining 638 conservative. Nodes zero degree need removed.","code":""},{"path":"https://enigmasong.github.io/nethist/reference/polblog_edgelist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"\nPolitical blog (edgelist) — polblog_edgelist","text":"http://www-personal.umich.edu/~mejn/netdata/ https://github.com/p-wolfe/network-histogram-code","code":""},{"path":"https://enigmasong.github.io/nethist/reference/polblog_edgelist.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"\nPolitical blog (edgelist) — polblog_edgelist","text":"Adamic, L. ., & Glance, N. (2005). political blogosphere 2004 US election: divided blog. Proceedings 3rd international workshop Link discovery (pp. 36-43)","code":""},{"path":"https://enigmasong.github.io/nethist/reference/polblog_edgelist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"\nPolitical blog (edgelist) — polblog_edgelist","text":"","code":"data(polblog_edgelist) data(polblog)  #From polblog_edgelist to polblog G<- igraph::graph_from_edgelist(as.matrix(polblog_edgelist), directed = FALSE) G<- igraph::delete.vertices(G, igraph::degree(G) == 0) G<- igraph::simplify(G)  polblog #> IGRAPH c8f356f U--- 1224 16715 --  #> + edges from c8f356f: #>  [1] 1--   2 1--  19 1--  21 1--  48 1--  57 1--  72 1--  97 1-- 127 1-- 156 #> [10] 1-- 193 1-- 204 1-- 205 1-- 254 1-- 287 1-- 341 1-- 377 1-- 390 1-- 446 #> [19] 1-- 451 1-- 498 1-- 499 1-- 501 1-- 518 1-- 909 1--1008 1--1178 2--  16 #> [28] 2--  22 2--  26 2--  46 2--  48 2--  84 2-- 119 2-- 126 2-- 127 2-- 131 #> [37] 2-- 141 2-- 147 2-- 166 2-- 191 2-- 198 2-- 254 2-- 261 2-- 284 2-- 304 #> [46] 2-- 306 2-- 339 2-- 352 2-- 373 2-- 377 2-- 387 2-- 428 2-- 429 2-- 440 #> [55] 2-- 442 2-- 443 2-- 444 2-- 448 2-- 487 2-- 498 2-- 499 2-- 501 2-- 507 #> [64] 2-- 514 2-- 518 2-- 522 2-- 537 2-- 584 2-- 586 2-- 909 3-- 405 3-- 562 #> [73] 3-- 563 3--1180 4-- 574 5-- 359 6--  37 6--  48 6-- 147 6-- 148 6-- 164 #> + ... omitted several edges"},{"path":"https://enigmasong.github.io/nethist/reference/summary_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Bin summary by covariate — summary_plot","title":"Bin summary by covariate — summary_plot","text":"Drawing bin summary plot covariates given nethist object user-specified order.","code":""},{"path":"https://enigmasong.github.io/nethist/reference/summary_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bin summary by covariate — summary_plot","text":"","code":"summary_plot(   object,   covariate,   idx_order = 1:max(object$cluster),   main = NA,   ylab = NA,   legend_title = NA,   stat = \"count\",   position = \"stack\" )"},{"path":"https://enigmasong.github.io/nethist/reference/summary_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bin summary by covariate — summary_plot","text":"object nethist object nethist(). covariate vector univariate covariate. factor, draw stacked barchart. numeric, draw violin plot. idx_order numeric vector index label order, must permutation object$cluster. NA, uses 1:max(object$clsuter). main title summary plot. NA, plot title. ylab label y-axis. NA, y-axis label \"covariate\" legend_title title legend. NA, legend title \"covariate\" stat variable pass ggplot2::geom_bar(). used factor covariate. position variable pass ggplot2::geom_bar(). used factor covariate.","code":""},{"path":"https://enigmasong.github.io/nethist/reference/summary_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bin summary by covariate — summary_plot","text":"heatmap network histogram p_mat ordered idx_order nethist object.","code":""},{"path":"https://enigmasong.github.io/nethist/reference/summary_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bin summary by covariate — summary_plot","text":"... includes various graphical parameters passes stats::heatmap(), graphics::image().","code":""},{"path":"https://enigmasong.github.io/nethist/reference/summary_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bin summary by covariate — summary_plot","text":"","code":"if (FALSE) { set.seed(42) nethist_polblog <- nethist(polblog, h = 72)  #Add factor covariate politic <- factor(c(rep(\"Liberal\", 586), rep(\"Conservative\", 1224-586)))  summary_plot(nethist_polblog, politic)  #with user-specified order idx <-  c(17,10,13,7,12,4,8,5,1,2,6,3,9,15,11,14,16) summary_plot(nethist_polblog, politic, idx_order = idx)  #Add title and change ylab summary_plot(nethist_polblog, politic, idx_order = idx,                main = \"Political View\", ylab = \"Number of blogs\")  #Add numeric covariates numeric_covariate <- nethist_polblog$cluster + rnorm(1224, sd = 3)  summary_plot(nethist_polblog, numeric_covariate)  summary_plot(nethist_polblog, numeric_covariate, idx_order = idx) #With-user specified order  }"},{"path":"https://enigmasong.github.io/nethist/reference/violin_netsummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Network summary plots — violin_netsummary","title":"Network summary plots — violin_netsummary","text":"Draw network summary plot proposed Maugis et al. (2017). count k-cycles, Alon et al. (1997) used.","code":""},{"path":"https://enigmasong.github.io/nethist/reference/violin_netsummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network summary plots — violin_netsummary","text":"","code":"violin_netsummary(   A,   subsample_sizes = NA,   max_cycle_order = 4,   R = NA,   Ns = 11,   alpha = 0.05,   y.max = NA,   save.plot = FALSE,   filename = \"myplot.pdf\" )"},{"path":"https://enigmasong.github.io/nethist/reference/violin_netsummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network summary plots — violin_netsummary","text":"adjacency matrix igraph object draw network summary plot. must undirected simple graph. subsample_sizes numeric vector node subsample sizes. NA, length Ns vector obtained automatic subsample size selection. max_cycle_order integer value maximum cycle size. Must >=3 <=7. R integer value subsampling replication. NA, R automatically selected alpha. Ns number different subsample sizes. used subsample_sizes = NA, , automatic subsample size selection used. alpha pre-specified level used determining R subsample_sizes specified. must (0,1). Default 0.05. Smaller alpha gives larger R subsample_sizes. y.max Upper limit y-axis plot. Must 0 < y.max <= 1. NA, upper limit automatically selected. save.plot logical variable whether save generated figure . TRUE, plot saved ggplot2::ggsave() specified file name. Otherwise, display generated plot. filename file name save generated figure.","code":""},{"path":"https://enigmasong.github.io/nethist/reference/violin_netsummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Network summary plots — violin_netsummary","text":"network summary plot, data.frame networks summaries.","code":""},{"path":"https://enigmasong.github.io/nethist/reference/violin_netsummary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Network summary plots — violin_netsummary","text":"Vertex sampling done simple random sampling without replacement. Following matrix classes supported: base::matrix, Matrix::dgCMatrix","code":""},{"path":"https://enigmasong.github.io/nethist/reference/violin_netsummary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Network summary plots — violin_netsummary","text":"Maugis et al. (2017). Topology reveals universal features network comparison. arXiv: 1705.05677 Alon et al. (1997). Finding counting given length cycles. Algorithmica 17, 209–223 (1997). https://doi.org/10.1007/BF02523189","code":""},{"path":"https://enigmasong.github.io/nethist/reference/violin_netsummary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Network summary plots — violin_netsummary","text":"","code":"if (FALSE) { set.seed(2022) #Generating Erdos-Renyi graph n <- 400 #igraph object A <- igraph::sample_gnp(n, 0.05) violin_netsummary(A)  #sparse adjacency matrix A2 <- igraph::as_adj(A) violin_netsummary(A2)  #dense adjacency matrix A2 <- igraph::as_adj(A, sparse = FALSE) violin_netsummary(A2)  #user-specified R and subsample_sizes violin_netsummary(A, R = 500, subsample_sizes = 150)  #user-specified alpha violin_netsummary(A, alpha = 0.1)  #saving the plot with user-specified file name violin_netsummary(A, save.plot = TRUE, filename = \"myfig.pdf\") }"},{"path":"https://enigmasong.github.io/nethist/news/index.html","id":"nethist-024","dir":"Changelog","previous_headings":"","what":"nethist 0.2.4","title":"nethist 0.2.4","text":"update: 2023/04/04 -bug fix plot()","code":""},{"path":"https://enigmasong.github.io/nethist/news/index.html","id":"nethist-023","dir":"Changelog","previous_headings":"","what":"nethist 0.2.3","title":"nethist 0.2.3","text":"update: 2023/03/15 Documentation updates Internal functions (visible users)","code":""},{"path":"https://enigmasong.github.io/nethist/news/index.html","id":"nethist-022","dir":"Changelog","previous_headings":"","what":"nethist 0.2.2","title":"nethist 0.2.2","text":"update: 2022/12/08 can display estimated probabilities p_mat nethist objects setting prob=TRUE. Use prob.col prob.cex set color size text, respectively. Check convergence criterion every 5 iterations fifth iteration (5,10,15,…) instead every 5 iterations first iteration (1,6,11,…). minor speed improvement.","code":""},{"path":"https://enigmasong.github.io/nethist/news/index.html","id":"nethist-021","dir":"Changelog","previous_headings":"","what":"nethist 0.2.1","title":"nethist 0.2.1","text":"update: 2022/11/26 Initialization step nethist() faster earlier computing hamming distance (simple) adjacency matrix instead Manhattan distance.","code":""},{"path":"https://enigmasong.github.io/nethist/news/index.html","id":"nethist-020","dir":"Changelog","previous_headings":"","what":"nethist 0.2.0","title":"nethist 0.2.0","text":"update: 2022/11/19 Computation speed nethist() violin_netsummary() improved.","code":""},{"path":"https://enigmasong.github.io/nethist/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"nethist 0.2.0","text":"nethist(): computation diagonal part o greedy search Rcpp routine fixed. nethist(): computation log-likelihood smaller size group fixed, greedy search Rcpp routine.","code":""},{"path":"https://enigmasong.github.io/nethist/news/index.html","id":"nethist-011","dir":"Changelog","previous_headings":"","what":"nethist 0.1.1","title":"nethist 0.1.1","text":"update: 2022/11/08 Documentations update: provide extra default values arguments, rewrite examples.","code":""},{"path":"https://enigmasong.github.io/nethist/news/index.html","id":"bug-fixes-0-1-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"nethist 0.1.1","text":"Resolving default value issue R violin_netsummary().","code":""},{"path":"https://enigmasong.github.io/nethist/news/index.html","id":"nethist-010","dir":"Changelog","previous_headings":"","what":"nethist 0.1.0","title":"nethist 0.1.0","text":"update: 2022/11/04 Initial release nethist R package (development)","code":""}]
