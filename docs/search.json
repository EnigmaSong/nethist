[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Youngseok Song. Author, maintainer. Sofia C. Olhede. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Song Y, Olhede S (2022). nethist: Network histogram. R package version 0.1.0.","code":"@Manual{,   title = {nethist: Network histogram},   author = {Youngseok Song and Sofia C. Olhede},   year = {2022},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"nethist","dir":"","previous_headings":"","what":"Network histogram ","title":"Network histogram ","text":"goal nethist estimate scaled graphons via network histogram. also provides extra tools summary violon plot networks visualizing network histogram.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Network histogram ","text":"can install development version nethist GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"EnigmaSong/nethist\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Network histogram ","text":"basic example using political blog data set package:","code":"library(nethist) ## Example code using polblog data set set.seed(42) hist_polblog <- nethist(polblog, h = 72) plot(hist_polblog) ## Users can specify the index order of heatmap plot(hist_polblog, idx_order = c(17,16,14,12,10,7,5,3,1,2,4,6,8,9,11,13,15))"},{"path":"/reference/dot-prob_mat_from_adj.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability matrix computation from network histogram cluster indices — .prob_mat_from_adj","title":"Probability matrix computation from network histogram cluster indices — .prob_mat_from_adj","text":"adjacency matrix cluster index vector, returns probability matrix","code":""},{"path":"/reference/dot-prob_mat_from_adj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability matrix computation from network histogram cluster indices — .prob_mat_from_adj","text":"","code":".prob_mat_from_adj(A, idx)"},{"path":"/reference/dot-prob_mat_from_adj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability matrix computation from network histogram cluster indices — .prob_mat_from_adj","text":"symmetric adjacency matrix. must binary entries (0 1). idx index vector consists integers 1 K","code":""},{"path":"/reference/dot-prob_mat_from_adj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability matrix computation from network histogram cluster indices — .prob_mat_from_adj","text":"matrix whose entries 0 1.","code":""},{"path":"/reference/dot-prob_mat_from_adj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability matrix computation from network histogram cluster indices — .prob_mat_from_adj","text":"","code":"if (FALSE) { set.seed(2022) #Generating Erdos-Renyi graph A <- igraph::sample_gnp(100, 0.05) A <- igraph::as_adj(A) res <- nethist(A)   prob_mat_from_adj(A, res$cluster) all.equal(prob_mat_from_adj(A, res$cluster), res$p_mat) }"},{"path":"/reference/nethist.html","id":null,"dir":"Reference","previous_headings":"","what":"Network histogram estimation — nethist","title":"Network histogram estimation — nethist","text":"Estimating network histogram returning indices partitions.","code":""},{"path":"/reference/nethist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network histogram estimation — nethist","text":"","code":"nethist(A, h = NA, outfile, verbose = FALSE)"},{"path":"/reference/nethist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network histogram estimation — nethist","text":"adjacency matrix igraph object. must undirected simple graph. h bandwidth parameter. NA, select bandwidth Olhede Wolfe (2014). specified, use user input value. outfile filename saving cluster indices. missing, results saved. verbose logical value indicating whether verbose output generated.","code":""},{"path":"/reference/nethist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Network histogram estimation — nethist","text":"object class nethist: cluster vector partition indices. p_mat probability matrix network histogram ordered cluster labels. rho_hat estimated sparsity parameter.","code":""},{"path":"/reference/nethist.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Network histogram estimation — nethist","text":"Olhede, S. C., & Wolfe, P. J. (2014). Network histograms universality blockmodel approximation. Proceedings National Academy Sciences, 111(41), 14722-14727. Wolfe, P. J., & Olhede, S. C. (2013). Nonparametric graphon estimation. arXiv preprint arXiv:1309.5936.","code":""},{"path":[]},{"path":"/reference/nethist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Network histogram estimation — nethist","text":"","code":"if (FALSE) { set.seed(2022) #Generating Erdos-Renyi graph A <- igraph::sample_gnp(100, 0.05) A <- igraph::as_adj(A, sparse = FALSE) hist_A = nethist(A) #Save the result in idx, do not save it in a csv file. }"},{"path":"/reference/plot.nethist.html","id":null,"dir":"Reference","previous_headings":"","what":"Network histogram plot — plot.nethist","title":"Network histogram plot — plot.nethist","text":"Drawing heatmap() using nethist object user-specified order.","code":""},{"path":"/reference/plot.nethist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network histogram plot — plot.nethist","text":"","code":"# S3 method for nethist plot(x, idx_order = 1:max(x$cluster), ...)"},{"path":"/reference/plot.nethist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network histogram plot — plot.nethist","text":"x nethist object nethist(). idx_order numeric vector index label order, must permutation x$cluster. ... arguments pass stats::heatmap().","code":""},{"path":"/reference/plot.nethist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Network histogram plot — plot.nethist","text":"heatmap","code":""},{"path":"/reference/plot.nethist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Network histogram plot — plot.nethist","text":"","code":"if (FALSE) { set.seed(2022) #Generating Erdos-Renyi graph A <- igraph::sample_gnp(200, 0.05) hist_A <- nethist(A) plot(hist_A) }"},{"path":"/reference/polblog.html","id":null,"dir":"Reference","previous_headings":"","what":"\nPolitical blog — polblog","title":"\nPolitical blog — polblog","text":"Political blog data set Olhede Wolfe (2014), part original data set Adamic Glance (2005). provided edgelist GitHub repository Prof. Patrick Wolfe. provided igraph object zero-degree removed simplified graph edgelist.","code":""},{"path":"/reference/polblog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"\nPolitical blog — polblog","text":"","code":"data(polblog) data(polblog_edgelist)"},{"path":"/reference/polblog.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"\nPolitical blog — polblog","text":"- polblog igraph object political blog dataset, pre-processed data symmetrize simplified without self-loops. -  polblog_edgelist matrix edge list https://github.com/p-wolfe/network-histogram-code. V1 numeric vector tail vertices. V2 numeric vector head vertices.","code":""},{"path":"/reference/polblog.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"\nPolitical blog — polblog","text":"adjancency matrix polblog_edgelist sparse, assymetric, needs symmetrized method requires symmetric matrix. First 586 blogs liberal; remaining 638 conservative. Nodes zero degree need removed.","code":""},{"path":"/reference/polblog.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"\nPolitical blog — polblog","text":"http://www-personal.umich.edu/~mejn/netdata/ https://github.com/p-wolfe/network-histogram-code","code":""},{"path":"/reference/polblog.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"\nPolitical blog — polblog","text":"Adamic, L. ., & Glance, N. (2005). political blogosphere 2004 US election: divided blog. Proceedings 3rd international workshop Link discovery (pp. 36-43)","code":""},{"path":"/reference/polblog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"\nPolitical blog — polblog","text":"","code":"data(polblog_edgelist) data(polblog)  G<- igraph::graph_from_edgelist(as.matrix(polblog_edgelist), directed = FALSE) G<- delete.vertice(G, degree(G) == 0) #> Error in delete.vertice(G, degree(G) == 0): could not find function \"delete.vertice\" G<- igraph::simplify(G)  polblog #> IGRAPH c8f356f U--- 1224 16715 --  #> + edges from c8f356f: #>  [1] 1--   2 1--  19 1--  21 1--  48 1--  57 1--  72 1--  97 1-- 127 1-- 156 #> [10] 1-- 193 1-- 204 1-- 205 1-- 254 1-- 287 1-- 341 1-- 377 1-- 390 1-- 446 #> [19] 1-- 451 1-- 498 1-- 499 1-- 501 1-- 518 1-- 909 1--1008 1--1178 2--  16 #> [28] 2--  22 2--  26 2--  46 2--  48 2--  84 2-- 119 2-- 126 2-- 127 2-- 131 #> [37] 2-- 141 2-- 147 2-- 166 2-- 191 2-- 198 2-- 254 2-- 261 2-- 284 2-- 304 #> [46] 2-- 306 2-- 339 2-- 352 2-- 373 2-- 377 2-- 387 2-- 428 2-- 429 2-- 440 #> [55] 2-- 442 2-- 443 2-- 444 2-- 448 2-- 487 2-- 498 2-- 499 2-- 501 2-- 507 #> [64] 2-- 514 2-- 518 2-- 522 2-- 537 2-- 584 2-- 586 2-- 909 3-- 405 3-- 562 #> [73] 3-- 563 3--1180 4-- 574 5-- 359 6--  37 6--  48 6-- 147 6-- 148 6-- 164 #> + ... omitted several edges"},{"path":"/reference/violin_netsummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Network summary plots — violin_netsummary","title":"Network summary plots — violin_netsummary","text":"Draw network summary plot proposed Maugis et al. (2017). Counting k-cycles Alon et al. (1997).","code":""},{"path":"/reference/violin_netsummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network summary plots — violin_netsummary","text":"","code":"violin_netsummary(   A,   Ns = 11,   subsample_sizes = NA,   max_cycle_order = 4,   R = NA,   alpha = 0.05,   y.max = NA,   save.plot = FALSE,   filename = \"myplot.pdf\" )"},{"path":"/reference/violin_netsummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network summary plots — violin_netsummary","text":"adjacency matrix igraph object draw network summary plot. must undirected simple graph. Ns number different subsample size subsample_sizes numeric vector node subsample sizes. max_cycle_order integer value maximum cycle size. Must >=3 <=7. R integer value subsampling replication. NA, R automatically selected alpha. alpha pre-specified level used determining R subsample_sizes specified. must (0,1). Default 0.05. Smaller alpha gives larger R subsample_sizes. y.max Upper limit y-axis plot. Must 0 < y.max <= 1. NA, upper limit automatically selected. save.plot logical variable whether save generated figure . TRUE, save generated plot specified file name. Otherwise, display generated plot. filename file name save generated figure","code":""},{"path":"/reference/violin_netsummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Network summary plots — violin_netsummary","text":"network summary plot, data.frame networks summaries.","code":""},{"path":"/reference/violin_netsummary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Network summary plots — violin_netsummary","text":"Vertex sampling done simple random sampling without replacement. Following matrix classes supported: base::matrix, Matrix::dgCMatrix","code":""},{"path":"/reference/violin_netsummary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Network summary plots — violin_netsummary","text":"Maugis et al. (2017). Topology reveals universal features network comparison. arXiv: 1705.05677 Alon et al. (1997). Finding counting given length cycles. Algorithmica 17, 209–223 (1997). https://doi.org/10.1007/BF02523189","code":""},{"path":"/reference/violin_netsummary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Network summary plots — violin_netsummary","text":"","code":"if (FALSE) { set.seed(2022) #Generating Erdos-Renyi graph n <- 400 #Using igraph object A <- igraph::sample_gnp(n, 0.05) violin_netsummary(A, save.plot = FALSE)  #Using sparse adjacency matrix A <- igraph::as_adj(A) violin_netsummary(A, save.plot = FALSE) }"},{"path":"/news/index.html","id":"nethist-010","dir":"Changelog","previous_headings":"","what":"nethist 0.1.0","title":"nethist 0.1.0","text":"Initial release nethist R package","code":""}]
